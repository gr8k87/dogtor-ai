modules = ["python-3.11", "nodejs-20"]

[agent]
expertMode = true

[nix]
channel = "stable-25_05"
packages = [
  "freetype",
  "lcms2",
  "libimagequant",
  "libjpeg",
  "libtiff",
  "libwebp",
  "libxcrypt",
  "openjpeg",
  "tcl",
  "tk",
  "zlib",
]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend Server"

[[workflows.workflow]]
name = "Backend Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
# Use uvicorn so we can pin port 8000 and wait for it
args = "cd backend && python -m pip install -r requirements.txt || python -m pip install fastapi uvicorn sqlalchemy pillow aiohttp && uvicorn main:app --host 0.0.0.0 --port 8000"
waitForPort = 8000

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "Frontend Server"
author = "agent"

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow.tasks]]
task = "shell.exec"
# Use $PORT if Replit provides one; fall back to 5173 locally
# Remove hardcoded VITE_API_URL; rely on Vite dev proxy to /api -> backend:8000
args = "cd frontend && PORT=${PORT:-5173} npm run dev"
waitForPort = 5173

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3000

[[ports]]
localPort = 8000
externalPort = 8000
