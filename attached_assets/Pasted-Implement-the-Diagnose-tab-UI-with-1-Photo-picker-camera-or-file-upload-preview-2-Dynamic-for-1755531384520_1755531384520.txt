Implement the Diagnose tab UI with:
1) Photo picker (camera or file upload) + preview
2) Dynamic form renderer that takes a JSON schema (no backend yet)
3) Submit button that validates and shows a mock “Review” card

Details:
- Create /client/src/components/ImagePicker.tsx:
  - Props: { onChange:(file: File|null)=>void }
  - Accept "image/*", capture="environment" for mobile camera
  - Show a preview thumbnail; allow “Remove” to clear

- Create /client/src/components/DynamicForm.tsx:
  - Props:
    {
      schema: Array<
        | { id:string; type:'select'; label:string; options:string[]; required?:boolean }
        | { id:string; type:'radio';  label:string; options:string[]; required?:boolean }
        | { id:string; type:'yesno';  label:string; required?:boolean }
        | { id:string; type:'text';   label:string; placeholder?:string; required?:boolean }
        | { id:string; type:'number'; label:string; min?:number; max?:number; step?:number; required?:boolean }
      >;
      value: Record<string, any>;
      onChange:(next: Record<string,any>)=>void;
    }
  - Render suitable controls (Tailwind), add aria-labels, required indicators
  - Basic validation: highlight empty required fields

- Update Diagnose section in /client/src/App.tsx:
  - Local state: imageFile, formData, formErrors, showReview
  - Hardcode a schema example:
    const schema = [
      { id:'duration_days', type:'number', label:'How many days has this been happening?', min:0, max:30, step:1, required:true },
      { id:'diet_change',   type:'select', label:'Recent diet change?', options:['Yes','No','Not sure'], required:true },
      { id:'energy',        type:'radio',  label:'Energy level', options:['Normal','Slightly low','Very low'], required:true },
      { id:'vomiting',      type:'yesno',  label:'Any vomiting?', required:true },
      { id:'notes',         type:'text',   label:'Anything else to add?', placeholder:'Optional notes' }
    ];
  - Layout:
    - “Add photo” card using <ImagePicker />
    - “Questions” card using <DynamicForm />
    - Primary button “Review”:
      - Validate required fields + ensure a photo is selected
      - If valid → set showReview=true and render a simple summary card:
        - Thumbnail, and key answers (duration_days, diet_change, energy, vomiting, notes)
      - If invalid → show inline errors

- Keep mobile-first styling, large touch targets (min h-12), and safe color contrast.
- DO NOT add any API calls yet; this is UI only.
