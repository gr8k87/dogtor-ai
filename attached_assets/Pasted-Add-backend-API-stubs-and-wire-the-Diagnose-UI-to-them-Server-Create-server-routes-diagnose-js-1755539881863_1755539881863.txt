Add backend API stubs and wire the Diagnose UI to them.

Server:
- Create /server/routes/diagnose.js (ESM) with two routes:
  - POST /api/diagnose/init -> returns JSON:
    {
      "visual_features": { "example": true },
      "suggested_questions": [
        { "id":"duration_days","type":"number","label":"How many days has this been happening?","min":0,"max":30,"step":1,"required":true },
        { "id":"diet_change","type":"select","label":"Recent diet change?","options":["Yes","No","Not sure"],"required":true },
        { "id":"energy","type":"radio","label":"Energy level","options":["Normal","Slightly low","Very low"],"required":true },
        { "id":"vomiting","type":"yesno","label":"Any vomiting?","required":true },
        { "id":"notes","type":"text","label":"Anything else to add?","placeholder":"Optional notes" }
      ]
    }
  - POST /api/diagnose/triage -> expects { imagePresent:boolean, answers:{} } and returns mock triage:
    {
      "triage_summary":"Preliminary pre-vet guidance based on your inputs.",
      "possible_causes":["Mild GI upset (diet change)","Food intolerance","Early infection"],
      "recommended_actions":[
        "Ensure hydration (fresh water available)",
        "Revert to previous stable diet for 48 hours",
        "If symptoms persist >48h or worsen, contact a veterinarian"
      ],
      "urgency_level":"Moderate"
    }

- In /server/app.js:
  - import express and json already exist; add:
      import diagnose from "./routes/diagnose.js";
      app.use("/api/diagnose", diagnose);

Client:
- Update Diagnose view in /client/src/App.(tsx|jsx):
  - On mount (when Diagnose tab active), call POST /api/diagnose/init with a dummy body (e.g., {}).
  - Replace the hardcoded schema with the fetched `suggested_questions`.
  - Add small loading and error states for the fetch.
  - On "Review" click (when validation passes), call POST /api/diagnose/triage with:
      { imagePresent: !!imageFile, answers: formData }
    and display the returned triage (summary, causes, actions, urgency) in the Review card.
- Keep UI mobile-first and do not add any DB/auth/AI providers yet.

Do not change other tabs or add new dependencies.
